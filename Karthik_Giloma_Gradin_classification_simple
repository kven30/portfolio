{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Fkfe0UEE8UFy"
      },
      "outputs": [],
      "source": [
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import ConfusionMatrixDisplay, RocCurveDisplay\n",
        "from tensorflow.keras.callbacks import EarlyStopping\n",
        "from tensorflow.keras import layers, callbacks\n",
        "\n",
        "import tensorflow as tf\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "fCpg9ND2k8B7"
      },
      "outputs": [],
      "source": [
        "data = pd.read_csv('/content/TCGA_InfoWithGrade.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "hvVkhYoxnHGS",
        "outputId": "f3583e03-5ce9-4ae7-e325-2dcc091df01e"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            },
            "text/html": [
              "\n",
              "  <div id=\"df-5add592f-7620-435b-9f6b-c8f7718e1244\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Grade</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Age_at_diagnosis</th>\n",
              "      <th>Race</th>\n",
              "      <th>IDH1</th>\n",
              "      <th>TP53</th>\n",
              "      <th>ATRX</th>\n",
              "      <th>PTEN</th>\n",
              "      <th>EGFR</th>\n",
              "      <th>CIC</th>\n",
              "      <th>...</th>\n",
              "      <th>FUBP1</th>\n",
              "      <th>RB1</th>\n",
              "      <th>NOTCH1</th>\n",
              "      <th>BCOR</th>\n",
              "      <th>CSMD3</th>\n",
              "      <th>SMARCA4</th>\n",
              "      <th>GRIN2A</th>\n",
              "      <th>IDH2</th>\n",
              "      <th>FAT4</th>\n",
              "      <th>PDGFRA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>51.30</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>38.72</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>35.17</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>32.78</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>31.51</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>834</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>77.89</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>835</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>85.18</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>836</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>77.49</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>837</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>63.33</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>838</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>76.61</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>839 rows × 24 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5add592f-7620-435b-9f6b-c8f7718e1244')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5add592f-7620-435b-9f6b-c8f7718e1244 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5add592f-7620-435b-9f6b-c8f7718e1244');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-041786df-cb85-44ac-9dbb-b628aa56b276\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-041786df-cb85-44ac-9dbb-b628aa56b276')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-041786df-cb85-44ac-9dbb-b628aa56b276 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_81c30eb6-a0aa-419e-b8ec-ffcb936cd78b\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_81c30eb6-a0aa-419e-b8ec-ffcb936cd78b button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('data');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "text/plain": [
              "     Grade  Gender  Age_at_diagnosis  Race  IDH1  TP53  ATRX  PTEN  EGFR  CIC  \\\n",
              "0        0       0             51.30     0     1     0     0     0     0    0   \n",
              "1        0       0             38.72     0     1     0     0     0     0    1   \n",
              "2        0       0             35.17     0     1     1     1     0     0    0   \n",
              "3        0       1             32.78     0     1     1     1     0     0    0   \n",
              "4        0       0             31.51     0     1     1     1     0     0    0   \n",
              "..     ...     ...               ...   ...   ...   ...   ...   ...   ...  ...   \n",
              "834      1       1             77.89     0     0     0     0     1     0    0   \n",
              "835      1       0             85.18     0     0     1     0     1     0    0   \n",
              "836      1       1             77.49     0     0     1     0     1     0    0   \n",
              "837      1       0             63.33     0     0     1     0     0     0    0   \n",
              "838      1       0             76.61     1     0     0     0     0     0    0   \n",
              "\n",
              "     ...  FUBP1  RB1  NOTCH1  BCOR  CSMD3  SMARCA4  GRIN2A  IDH2  FAT4  PDGFRA  \n",
              "0    ...      1    0       0     0      0        0       0     0     0       0  \n",
              "1    ...      0    0       0     0      0        0       0     0     0       0  \n",
              "2    ...      0    0       0     0      0        0       0     0     0       0  \n",
              "3    ...      0    0       0     0      0        0       0     0     1       0  \n",
              "4    ...      0    0       0     0      0        0       0     0     0       0  \n",
              "..   ...    ...  ...     ...   ...    ...      ...     ...   ...   ...     ...  \n",
              "834  ...      0    0       0     0      0        0       0     0     0       0  \n",
              "835  ...      0    0       0     0      0        0       0     0     0       0  \n",
              "836  ...      0    0       0     0      0        0       0     0     0       0  \n",
              "837  ...      0    1       0     0      0        0       0     0     0       0  \n",
              "838  ...      0    0       0     0      0        0       0     0     0       0  \n",
              "\n",
              "[839 rows x 24 columns]"
            ]
          },
          "execution_count": 4,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": true,
        "id": "pYSQhPQYwM_W"
      },
      "outputs": [],
      "source": [
        "data = data.dropna()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "collapsed": true,
        "id": "SjQGreoX_D5d",
        "outputId": "1365b3de-b5bb-4a86-f33c-0518713b760e"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 839 entries, 0 to 838\n",
            "Data columns (total 24 columns):\n",
            " #   Column            Non-Null Count  Dtype  \n",
            "---  ------            --------------  -----  \n",
            " 0   Grade             839 non-null    int64  \n",
            " 1   Gender            839 non-null    int64  \n",
            " 2   Age_at_diagnosis  839 non-null    float64\n",
            " 3   Race              839 non-null    int64  \n",
            " 4   IDH1              839 non-null    int64  \n",
            " 5   TP53              839 non-null    int64  \n",
            " 6   ATRX              839 non-null    int64  \n",
            " 7   PTEN              839 non-null    int64  \n",
            " 8   EGFR              839 non-null    int64  \n",
            " 9   CIC               839 non-null    int64  \n",
            " 10  MUC16             839 non-null    int64  \n",
            " 11  PIK3CA            839 non-null    int64  \n",
            " 12  NF1               839 non-null    int64  \n",
            " 13  PIK3R1            839 non-null    int64  \n",
            " 14  FUBP1             839 non-null    int64  \n",
            " 15  RB1               839 non-null    int64  \n",
            " 16  NOTCH1            839 non-null    int64  \n",
            " 17  BCOR              839 non-null    int64  \n",
            " 18  CSMD3             839 non-null    int64  \n",
            " 19  SMARCA4           839 non-null    int64  \n",
            " 20  GRIN2A            839 non-null    int64  \n",
            " 21  IDH2              839 non-null    int64  \n",
            " 22  FAT4              839 non-null    int64  \n",
            " 23  PDGFRA            839 non-null    int64  \n",
            "dtypes: float64(1), int64(23)\n",
            "memory usage: 157.4 KB\n"
          ]
        }
      ],
      "source": [
        "data.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "9GLO3BvVn4Lz"
      },
      "outputs": [],
      "source": [
        "#Removes sets input and output columns (output = GRADE)\n",
        "data = data.drop('Race', axis=1)\n",
        "input_cols=data.columns.tolist()\n",
        "input_cols.remove('Grade')\n",
        "output_col='Grade'\n",
        "data = data[input_cols + [output_col]]\n",
        "#spits data (train test split)\n",
        "X_train_1, X_test_1, y_train_1, y_test_1 = train_test_split(data[input_cols], data[output_col], train_size = 0.9)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "CUSTOM MODEL"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GnE7Md8do3H1",
        "outputId": "908c9648-5658-4383-a14d-e7d8474c0707"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/200\n",
            "19/19 [==============================] - 5s 32ms/step - loss: 0.7725 - binary_accuracy: 0.5364 - val_loss: 0.8613 - val_binary_accuracy: 0.5828 - lr: 0.0010\n",
            "Epoch 2/200\n",
            "19/19 [==============================] - 0s 10ms/step - loss: 0.7842 - binary_accuracy: 0.5381 - val_loss: 0.7570 - val_binary_accuracy: 0.5762 - lr: 0.0010\n",
            "Epoch 3/200\n",
            "19/19 [==============================] - 0s 10ms/step - loss: 0.7157 - binary_accuracy: 0.5778 - val_loss: 0.7147 - val_binary_accuracy: 0.5762 - lr: 0.0010\n",
            "Epoch 4/200\n",
            "19/19 [==============================] - 0s 9ms/step - loss: 0.7137 - binary_accuracy: 0.5795 - val_loss: 0.6873 - val_binary_accuracy: 0.5828 - lr: 0.0010\n",
            "Epoch 5/200\n",
            "19/19 [==============================] - 0s 11ms/step - loss: 0.6946 - binary_accuracy: 0.6093 - val_loss: 0.6683 - val_binary_accuracy: 0.5828 - lr: 0.0010\n",
            "Epoch 6/200\n",
            "19/19 [==============================] - 0s 10ms/step - loss: 0.6763 - binary_accuracy: 0.6175 - val_loss: 0.6529 - val_binary_accuracy: 0.5894 - lr: 0.0010\n",
            "Epoch 7/200\n",
            "19/19 [==============================] - 0s 15ms/step - loss: 0.6575 - binary_accuracy: 0.6308 - val_loss: 0.6368 - val_binary_accuracy: 0.5960 - lr: 0.0010\n",
            "Epoch 8/200\n",
            "19/19 [==============================] - 0s 15ms/step - loss: 0.6497 - binary_accuracy: 0.6242 - val_loss: 0.6226 - val_binary_accuracy: 0.6159 - lr: 0.0010\n",
            "Epoch 9/200\n",
            "19/19 [==============================] - 0s 12ms/step - loss: 0.6191 - binary_accuracy: 0.6556 - val_loss: 0.6088 - val_binary_accuracy: 0.6225 - lr: 0.0010\n",
            "Epoch 10/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.6045 - binary_accuracy: 0.6573 - val_loss: 0.5967 - val_binary_accuracy: 0.6623 - lr: 0.0010\n",
            "Epoch 11/200\n",
            "19/19 [==============================] - 0s 14ms/step - loss: 0.6190 - binary_accuracy: 0.6540 - val_loss: 0.5835 - val_binary_accuracy: 0.6821 - lr: 0.0010\n",
            "Epoch 12/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.5943 - binary_accuracy: 0.6705 - val_loss: 0.5707 - val_binary_accuracy: 0.6954 - lr: 0.0010\n",
            "Epoch 13/200\n",
            "19/19 [==============================] - 0s 12ms/step - loss: 0.5683 - binary_accuracy: 0.7086 - val_loss: 0.5597 - val_binary_accuracy: 0.7020 - lr: 0.0010\n",
            "Epoch 14/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.5672 - binary_accuracy: 0.6772 - val_loss: 0.5489 - val_binary_accuracy: 0.7086 - lr: 0.0010\n",
            "Epoch 15/200\n",
            "19/19 [==============================] - 0s 12ms/step - loss: 0.5724 - binary_accuracy: 0.6672 - val_loss: 0.5396 - val_binary_accuracy: 0.7219 - lr: 0.0010\n",
            "Epoch 16/200\n",
            "19/19 [==============================] - 0s 19ms/step - loss: 0.5657 - binary_accuracy: 0.6970 - val_loss: 0.5291 - val_binary_accuracy: 0.7483 - lr: 0.0010\n",
            "Epoch 17/200\n",
            "19/19 [==============================] - 0s 9ms/step - loss: 0.5431 - binary_accuracy: 0.6954 - val_loss: 0.5199 - val_binary_accuracy: 0.7616 - lr: 0.0010\n",
            "Epoch 18/200\n",
            "19/19 [==============================] - 0s 9ms/step - loss: 0.5455 - binary_accuracy: 0.7070 - val_loss: 0.5111 - val_binary_accuracy: 0.7682 - lr: 0.0010\n",
            "Epoch 19/200\n",
            "19/19 [==============================] - 0s 13ms/step - loss: 0.5297 - binary_accuracy: 0.7152 - val_loss: 0.5021 - val_binary_accuracy: 0.7748 - lr: 0.0010\n",
            "Epoch 20/200\n",
            "19/19 [==============================] - 0s 11ms/step - loss: 0.5418 - binary_accuracy: 0.7086 - val_loss: 0.4925 - val_binary_accuracy: 0.8079 - lr: 0.0010\n",
            "Epoch 21/200\n",
            "19/19 [==============================] - 0s 15ms/step - loss: 0.5254 - binary_accuracy: 0.7285 - val_loss: 0.4862 - val_binary_accuracy: 0.8212 - lr: 0.0010\n",
            "Epoch 22/200\n",
            "19/19 [==============================] - 0s 9ms/step - loss: 0.5176 - binary_accuracy: 0.7185 - val_loss: 0.4788 - val_binary_accuracy: 0.8477 - lr: 0.0010\n",
            "Epoch 23/200\n",
            "19/19 [==============================] - 0s 8ms/step - loss: 0.5129 - binary_accuracy: 0.7285 - val_loss: 0.4727 - val_binary_accuracy: 0.8543 - lr: 0.0010\n",
            "Epoch 24/200\n",
            "19/19 [==============================] - 0s 9ms/step - loss: 0.4932 - binary_accuracy: 0.7583 - val_loss: 0.4662 - val_binary_accuracy: 0.8609 - lr: 0.0010\n",
            "Epoch 25/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4950 - binary_accuracy: 0.7517 - val_loss: 0.4607 - val_binary_accuracy: 0.8675 - lr: 0.0010\n",
            "Epoch 26/200\n",
            "19/19 [==============================] - 0s 12ms/step - loss: 0.4980 - binary_accuracy: 0.7583 - val_loss: 0.4533 - val_binary_accuracy: 0.8742 - lr: 0.0010\n",
            "Epoch 27/200\n",
            "19/19 [==============================] - 0s 10ms/step - loss: 0.4783 - binary_accuracy: 0.7682 - val_loss: 0.4490 - val_binary_accuracy: 0.8742 - lr: 0.0010\n",
            "Epoch 28/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4906 - binary_accuracy: 0.7566 - val_loss: 0.4440 - val_binary_accuracy: 0.8742 - lr: 0.0010\n",
            "Epoch 29/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4990 - binary_accuracy: 0.7517 - val_loss: 0.4387 - val_binary_accuracy: 0.8808 - lr: 0.0010\n",
            "Epoch 30/200\n",
            "19/19 [==============================] - 0s 10ms/step - loss: 0.4927 - binary_accuracy: 0.7599 - val_loss: 0.4338 - val_binary_accuracy: 0.8808 - lr: 0.0010\n",
            "Epoch 31/200\n",
            "19/19 [==============================] - 0s 6ms/step - loss: 0.4819 - binary_accuracy: 0.7765 - val_loss: 0.4287 - val_binary_accuracy: 0.8808 - lr: 0.0010\n",
            "Epoch 32/200\n",
            "19/19 [==============================] - 0s 13ms/step - loss: 0.4783 - binary_accuracy: 0.7649 - val_loss: 0.4247 - val_binary_accuracy: 0.8808 - lr: 0.0010\n",
            "Epoch 33/200\n",
            "19/19 [==============================] - 0s 10ms/step - loss: 0.4775 - binary_accuracy: 0.7417 - val_loss: 0.4211 - val_binary_accuracy: 0.8808 - lr: 0.0010\n",
            "Epoch 34/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4627 - binary_accuracy: 0.7815 - val_loss: 0.4183 - val_binary_accuracy: 0.8808 - lr: 0.0010\n",
            "Epoch 35/200\n",
            "19/19 [==============================] - 0s 6ms/step - loss: 0.4725 - binary_accuracy: 0.7699 - val_loss: 0.4141 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 36/200\n",
            "19/19 [==============================] - 0s 11ms/step - loss: 0.4588 - binary_accuracy: 0.7881 - val_loss: 0.4118 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 37/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4640 - binary_accuracy: 0.7765 - val_loss: 0.4080 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 38/200\n",
            "19/19 [==============================] - 0s 13ms/step - loss: 0.4707 - binary_accuracy: 0.7864 - val_loss: 0.4053 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 39/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4412 - binary_accuracy: 0.7947 - val_loss: 0.4023 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 40/200\n",
            "19/19 [==============================] - 0s 12ms/step - loss: 0.4713 - binary_accuracy: 0.7715 - val_loss: 0.3989 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 41/200\n",
            "19/19 [==============================] - 0s 8ms/step - loss: 0.4561 - binary_accuracy: 0.7831 - val_loss: 0.3965 - val_binary_accuracy: 0.8940 - lr: 0.0010\n",
            "Epoch 42/200\n",
            "19/19 [==============================] - 0s 9ms/step - loss: 0.4652 - binary_accuracy: 0.7649 - val_loss: 0.3939 - val_binary_accuracy: 0.8940 - lr: 0.0010\n",
            "Epoch 43/200\n",
            "19/19 [==============================] - 0s 14ms/step - loss: 0.4643 - binary_accuracy: 0.7666 - val_loss: 0.3906 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 44/200\n",
            "19/19 [==============================] - 0s 10ms/step - loss: 0.4633 - binary_accuracy: 0.7666 - val_loss: 0.3894 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 45/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4737 - binary_accuracy: 0.7682 - val_loss: 0.3875 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 46/200\n",
            "19/19 [==============================] - 0s 16ms/step - loss: 0.4677 - binary_accuracy: 0.7666 - val_loss: 0.3865 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 47/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4615 - binary_accuracy: 0.7781 - val_loss: 0.3855 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 48/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4810 - binary_accuracy: 0.7649 - val_loss: 0.3825 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 49/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4490 - binary_accuracy: 0.7815 - val_loss: 0.3816 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 50/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4688 - binary_accuracy: 0.7748 - val_loss: 0.3803 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 51/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4585 - binary_accuracy: 0.7732 - val_loss: 0.3794 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 52/200\n",
            "19/19 [==============================] - 0s 6ms/step - loss: 0.4442 - binary_accuracy: 0.7881 - val_loss: 0.3769 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 53/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4579 - binary_accuracy: 0.7831 - val_loss: 0.3754 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 54/200\n",
            "19/19 [==============================] - 0s 6ms/step - loss: 0.4647 - binary_accuracy: 0.7831 - val_loss: 0.3753 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 55/200\n",
            "19/19 [==============================] - 0s 8ms/step - loss: 0.4686 - binary_accuracy: 0.7699 - val_loss: 0.3738 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 56/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4266 - binary_accuracy: 0.7897 - val_loss: 0.3723 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 57/200\n",
            "19/19 [==============================] - 0s 6ms/step - loss: 0.4515 - binary_accuracy: 0.7848 - val_loss: 0.3728 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 58/200\n",
            "19/19 [==============================] - 0s 8ms/step - loss: 0.4450 - binary_accuracy: 0.7881 - val_loss: 0.3709 - val_binary_accuracy: 0.8874 - lr: 0.0010\n",
            "Epoch 59/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4676 - binary_accuracy: 0.7947 - val_loss: 0.3710 - val_binary_accuracy: 0.8940 - lr: 0.0010\n",
            "Epoch 60/200\n",
            "19/19 [==============================] - 0s 6ms/step - loss: 0.4398 - binary_accuracy: 0.7848 - val_loss: 0.3696 - val_binary_accuracy: 0.8940 - lr: 0.0010\n",
            "Epoch 61/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4566 - binary_accuracy: 0.7781 - val_loss: 0.3676 - val_binary_accuracy: 0.8940 - lr: 0.0010\n",
            "Epoch 62/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4415 - binary_accuracy: 0.7897 - val_loss: 0.3675 - val_binary_accuracy: 0.8940 - lr: 0.0010\n",
            "Epoch 63/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4435 - binary_accuracy: 0.7881 - val_loss: 0.3661 - val_binary_accuracy: 0.8940 - lr: 0.0010\n",
            "Epoch 64/200\n",
            "19/19 [==============================] - 0s 6ms/step - loss: 0.4484 - binary_accuracy: 0.7798 - val_loss: 0.3662 - val_binary_accuracy: 0.8940 - lr: 0.0010\n",
            "Epoch 65/200\n",
            "19/19 [==============================] - 0s 6ms/step - loss: 0.4359 - binary_accuracy: 0.7881 - val_loss: 0.3644 - val_binary_accuracy: 0.9007 - lr: 0.0010\n",
            "Epoch 66/200\n",
            "19/19 [==============================] - 0s 6ms/step - loss: 0.4501 - binary_accuracy: 0.7848 - val_loss: 0.3634 - val_binary_accuracy: 0.9007 - lr: 0.0010\n",
            "Epoch 67/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4252 - binary_accuracy: 0.7964 - val_loss: 0.3618 - val_binary_accuracy: 0.9007 - lr: 0.0010\n",
            "Epoch 68/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4379 - binary_accuracy: 0.8030 - val_loss: 0.3617 - val_binary_accuracy: 0.9007 - lr: 0.0010\n",
            "Epoch 69/200\n",
            "19/19 [==============================] - 0s 6ms/step - loss: 0.4311 - binary_accuracy: 0.8278 - val_loss: 0.3624 - val_binary_accuracy: 0.8940 - lr: 0.0010\n",
            "Epoch 70/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4610 - binary_accuracy: 0.7632 - val_loss: 0.3611 - val_binary_accuracy: 0.8940 - lr: 0.0010\n",
            "Epoch 71/200\n",
            "19/19 [==============================] - 0s 6ms/step - loss: 0.4066 - binary_accuracy: 0.8030 - val_loss: 0.3607 - val_binary_accuracy: 0.8940 - lr: 0.0010\n",
            "Epoch 72/200\n",
            "19/19 [==============================] - 0s 6ms/step - loss: 0.4295 - binary_accuracy: 0.7997 - val_loss: 0.3585 - val_binary_accuracy: 0.9007 - lr: 0.0010\n",
            "Epoch 73/200\n",
            "19/19 [==============================] - 0s 8ms/step - loss: 0.4274 - binary_accuracy: 0.8096 - val_loss: 0.3573 - val_binary_accuracy: 0.9007 - lr: 0.0010\n",
            "Epoch 74/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4355 - binary_accuracy: 0.8046 - val_loss: 0.3562 - val_binary_accuracy: 0.9007 - lr: 0.0010\n",
            "Epoch 75/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4494 - binary_accuracy: 0.7881 - val_loss: 0.3566 - val_binary_accuracy: 0.9007 - lr: 0.0010\n",
            "Epoch 76/200\n",
            "19/19 [==============================] - 0s 8ms/step - loss: 0.4193 - binary_accuracy: 0.8212 - val_loss: 0.3558 - val_binary_accuracy: 0.9007 - lr: 0.0010\n",
            "Epoch 77/200\n",
            "19/19 [==============================] - 0s 7ms/step - loss: 0.4162 - binary_accuracy: 0.8146 - val_loss: 0.3547 - val_binary_accuracy: 0.9007 - lr: 0.0010\n",
            "Epoch 78/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4423 - binary_accuracy: 0.7765 - val_loss: 0.3539 - val_binary_accuracy: 0.9073 - lr: 0.0010\n",
            "Epoch 79/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4451 - binary_accuracy: 0.7897 - val_loss: 0.3532 - val_binary_accuracy: 0.9073 - lr: 0.0010\n",
            "Epoch 80/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4310 - binary_accuracy: 0.8079 - val_loss: 0.3523 - val_binary_accuracy: 0.9073 - lr: 0.0010\n",
            "Epoch 81/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4396 - binary_accuracy: 0.7997 - val_loss: 0.3523 - val_binary_accuracy: 0.9073 - lr: 0.0010\n",
            "Epoch 82/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4369 - binary_accuracy: 0.7831 - val_loss: 0.3522 - val_binary_accuracy: 0.9073 - lr: 0.0010\n",
            "Epoch 83/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4374 - binary_accuracy: 0.8063 - val_loss: 0.3522 - val_binary_accuracy: 0.9073 - lr: 0.0010\n",
            "Epoch 84/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4137 - binary_accuracy: 0.8046 - val_loss: 0.3532 - val_binary_accuracy: 0.9073 - lr: 0.0010\n",
            "Epoch 85/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4274 - binary_accuracy: 0.8013 - val_loss: 0.3518 - val_binary_accuracy: 0.9073 - lr: 0.0010\n",
            "Epoch 86/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4334 - binary_accuracy: 0.8046 - val_loss: 0.3513 - val_binary_accuracy: 0.9007 - lr: 0.0010\n",
            "Epoch 87/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4357 - binary_accuracy: 0.7815 - val_loss: 0.3513 - val_binary_accuracy: 0.9007 - lr: 0.0010\n",
            "Epoch 88/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4407 - binary_accuracy: 0.7732 - val_loss: 0.3505 - val_binary_accuracy: 0.9007 - lr: 0.0010\n",
            "Epoch 89/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4385 - binary_accuracy: 0.7864 - val_loss: 0.3507 - val_binary_accuracy: 0.9073 - lr: 0.0010\n",
            "Epoch 90/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4614 - binary_accuracy: 0.7765 - val_loss: 0.3526 - val_binary_accuracy: 0.9073 - lr: 0.0010\n",
            "Epoch 91/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4435 - binary_accuracy: 0.7798 - val_loss: 0.3517 - val_binary_accuracy: 0.9073 - lr: 0.0010\n",
            "Epoch 92/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4193 - binary_accuracy: 0.8030 - val_loss: 0.3514 - val_binary_accuracy: 0.9073 - lr: 0.0010\n",
            "Epoch 93/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4554 - binary_accuracy: 0.7781 - val_loss: 0.3512 - val_binary_accuracy: 0.9073 - lr: 0.0010\n",
            "Epoch 94/200\n",
            "19/19 [==============================] - 0s 4ms/step - loss: 0.4038 - binary_accuracy: 0.8179 - val_loss: 0.3509 - val_binary_accuracy: 0.9073 - lr: 1.0000e-04\n",
            "Epoch 95/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4325 - binary_accuracy: 0.8063 - val_loss: 0.3507 - val_binary_accuracy: 0.9073 - lr: 1.0000e-04\n",
            "Epoch 96/200\n",
            "19/19 [==============================] - 0s 5ms/step - loss: 0.4306 - binary_accuracy: 0.7930 - val_loss: 0.3506 - val_binary_accuracy: 0.9073 - lr: 1.0000e-04\n"
          ]
        }
      ],
      "source": [
        "sc = MinMaxScaler()\n",
        "sc.fit(X_train_1)\n",
        "\n",
        "#transforms train and test data\n",
        "X_train = sc.transform(X_train_1)\n",
        "X_test_1 = sc.transform(X_test_1)\n",
        "\n",
        "\n",
        "# Creates Dataframes out of train and test\n",
        "X_train_1 = pd.DataFrame(X_train_1, columns=input_cols)\n",
        "X_test_1 = pd.DataFrame(X_test_1, columns=input_cols)\n",
        "\n",
        "\n",
        "# Layers\n",
        "prediction_layer_1 = tf.keras.layers.Dense(units=1, activation='sigmoid')\n",
        "inputs = tf.keras.Input(shape=(len(input_cols),))\n",
        "x=tf.keras.layers.Dense(16, activation='relu')(inputs)\n",
        "x = tf.keras.layers.Dropout(0.3)(inputs)\n",
        "x = tf.keras.layers.BatchNormalization()(x)\n",
        "outputs = prediction_layer_1(x)\n",
        "simple_model = tf.keras.Model(inputs, outputs)\n",
        "\n",
        "\n",
        "#callbacks\n",
        "\n",
        "nn_early_stopping = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=8, restore_best_weights=True)\n",
        "nn_plateau_monitor = tf.keras.callbacks.ReduceLROnPlateau(monitor='val_loss', patience=5, factor=0.1)\n",
        "\n",
        "\n",
        "optimizer = tf.keras.optimizers.Adam(learning_rate=0.001)\n",
        "loss = tf.keras.losses.BinaryCrossentropy()\n",
        "\n",
        "#creates a metric for binary accuracy\n",
        "nn_accuracy = tf.keras.metrics.BinaryAccuracy()\n",
        "\n",
        "simple_model.compile(optimizer=optimizer, loss=loss, metrics=[nn_accuracy])\n",
        "\n",
        "\n",
        "nn_history = simple_model.fit(X_train_1, y_train_1, epochs=200, validation_split=0.2, verbose=1, callbacks=[nn_early_stopping, nn_plateau_monitor])\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4don-fvztnS8",
        "outputId": "9d5a50f9-cc83-46d6-d5a0-a726f4ebbef4"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "3/3 [==============================] - 0s 4ms/step\n",
            "[[8.0708182e-01]\n",
            " [1.7614437e-02]\n",
            " [1.3651037e-01]\n",
            " [5.1868516e-01]\n",
            " [1.1179368e-01]\n",
            " [6.5105878e-02]\n",
            " [6.4724755e-01]\n",
            " [1.3659267e-01]\n",
            " [6.8797842e-02]\n",
            " [8.8152671e-01]\n",
            " [5.3397059e-01]\n",
            " [9.4411178e-03]\n",
            " [6.5032959e-02]\n",
            " [5.8641052e-01]\n",
            " [3.1423625e-02]\n",
            " [6.4842188e-01]\n",
            " [1.4432400e-01]\n",
            " [5.3460592e-01]\n",
            " [6.3725609e-01]\n",
            " [7.2917119e-02]\n",
            " [5.4306340e-01]\n",
            " [5.8638585e-01]\n",
            " [7.2660929e-01]\n",
            " [2.3297900e-01]\n",
            " [8.1328279e-01]\n",
            " [3.7775524e-02]\n",
            " [1.5669893e-01]\n",
            " [9.3747514e-01]\n",
            " [5.1893216e-01]\n",
            " [6.4802420e-01]\n",
            " [5.0896186e-01]\n",
            " [1.7865412e-01]\n",
            " [5.5856800e-01]\n",
            " [6.7506880e-01]\n",
            " [5.3408962e-01]\n",
            " [2.2262385e-01]\n",
            " [1.8428950e-01]\n",
            " [8.7685341e-01]\n",
            " [5.7197529e-01]\n",
            " [2.3332892e-02]\n",
            " [5.3463000e-01]\n",
            " [6.7511797e-01]\n",
            " [8.5820049e-02]\n",
            " [5.3435165e-01]\n",
            " [8.0986051e-03]\n",
            " [5.3436917e-01]\n",
            " [6.3409072e-01]\n",
            " [4.9215952e-01]\n",
            " [6.4763772e-01]\n",
            " [6.4758253e-01]\n",
            " [6.8703234e-02]\n",
            " [1.4116092e-01]\n",
            " [8.8757453e-03]\n",
            " [6.8958655e-02]\n",
            " [6.8712145e-02]\n",
            " [1.3645907e-01]\n",
            " [9.0438271e-01]\n",
            " [2.0136805e-01]\n",
            " [6.8535709e-01]\n",
            " [9.5985847e-04]\n",
            " [6.9513690e-01]\n",
            " [5.3130258e-02]\n",
            " [3.0849472e-01]\n",
            " [5.0361180e-01]\n",
            " [6.6202527e-01]\n",
            " [3.3301897e-02]\n",
            " [6.6180164e-01]\n",
            " [1.4368528e-01]\n",
            " [8.2895899e-01]\n",
            " [6.6128033e-01]\n",
            " [1.3654520e-01]\n",
            " [5.5862463e-01]\n",
            " [7.1976197e-01]\n",
            " [4.8097942e-04]\n",
            " [8.4195513e-01]\n",
            " [1.4416686e-01]\n",
            " [2.0021237e-02]\n",
            " [6.8124408e-01]\n",
            " [7.1004331e-01]\n",
            " [7.9556614e-01]\n",
            " [2.7219516e-01]\n",
            " [8.1579810e-01]\n",
            " [5.1832098e-01]\n",
            " [7.4953467e-01]]\n"
          ]
        }
      ],
      "source": [
        "nn_prediction = simple_model.predict(X_test_1) # This will return a numpy array.\n",
        "print(nn_prediction)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vkJwiCR6tsBQ",
        "outputId": "1210a6db-587f-42d3-928e-65c5980bb647"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "[[1.]\n",
            " [0.]\n",
            " [0.]\n",
            " [1.]\n",
            " [0.]\n",
            " [0.]\n",
            " [1.]\n",
            " [0.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [0.]\n",
            " [0.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [0.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [1.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [1.]\n",
            " [0.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [0.]\n",
            " [0.]\n",
            " [0.]\n",
            " [0.]\n",
            " [0.]\n",
            " [0.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [0.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [0.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [1.]\n",
            " [0.]\n",
            " [1.]\n",
            " [1.]\n",
            " [1.]]\n"
          ]
        }
      ],
      "source": [
        "#rounds previous predictions\n",
        "nn_prediction_decision = np.round(nn_prediction)\n",
        "print(nn_prediction_decision)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 369
        },
        "id": "8Foaa3evOEV9",
        "outputId": "0d8bcf9b-4a78-4bea-91ff-64c70d4b322f"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "execution_count": 11,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "tf.keras.utils.plot_model(simple_model)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "6tqLfxhLtzHc",
        "outputId": "5eb1bad1-0b3f-4b1d-82c7-589561671456"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "plt.figure()\n",
        "plt.plot(nn_history.history['loss'], label='Training Loss')\n",
        "plt.plot(nn_history.history['val_loss'], label='Validation Loss')\n",
        "plt.xlabel('Epochs')\n",
        "plt.ylabel('MSE Loss')\n",
        "plt.legend()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "x292qn70vHHm",
        "outputId": "bdd76ea0-fa51-412a-aa10-144a7984bfd9"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "#confusion matrix\n",
        "ConfusionMatrixDisplay.from_predictions(y_test_1, nn_prediction_decision)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "Zi5tkCUCxFZl",
        "outputId": "7bbfa9fa-6ef8-4e3a-ee55-d43a212f8f01"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "#ROC AUC curve\n",
        "RocCurveDisplay.from_predictions(y_test_1, nn_prediction)\n",
        "plt.plot([0, 1], [0, 1], c='r', label='No Skill')\n",
        "plt.legend()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "nS9yFM1_EQbJ",
        "outputId": "46614899-29fa-4522-b4b0-cf120549f101"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "#Accuracy vs epochs plot\n",
        "\n",
        "plt.figure()\n",
        "plt.plot(nn_history.history['binary_accuracy'], label='Training Accuracy')\n",
        "plt.plot(nn_history.history['val_binary_accuracy'], label='Validation Accuracy')\n",
        "plt.xlabel('Epochs')\n",
        "plt.ylabel('Binary Accuracy (%)')\n",
        "plt.legend()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "H1Q2_B-uRRxD",
        "outputId": "fb1a66ed-e257-4b44-ecd5-875f0f21d7d8"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 0 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# Evaluate with Confusion Matrics using Random Classifier method\n",
        "\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.metrics import ConfusionMatrixDisplay\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Establish X and y (I changed here)\n",
        "X = data.iloc[:, 1:]\n",
        "y = data['Grade']\n",
        "\n",
        "# Split the data\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y)\n",
        "\n",
        "# Train the model\n",
        "model_clf = RandomForestClassifier(random_state=42) #produce the same train-test split and the same model training process, resulting in the same accuracy score every time.\n",
        "model_clf.fit(X_train, y_train)\n",
        "\n",
        "plt.figure()\n",
        "ConfusionMatrixDisplay.from_estimator(model_clf, X_test, y_test)\n",
        "# sns.set() turned the grid on. For this figure, we want it off. Future figures will still have the grid.\n",
        "plt.grid() # Toggles a grid for the current figure.\n",
        "plt.savefig('Confusion Matrix', dpi=200)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "RANDOM FOREST OVERFITTING below"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "snnnMj4eRbFh",
        "outputId": "ee25a6a8-5d10-43f1-f4e5-58f6c6c5007f"
      },
      "outputs": [
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "y_proba = model_clf.predict_proba(X_test)[:, 1] # Assuming binary classification, take probabilities for the positive class\n",
        "\n",
        "# Plot ROC curve\n",
        "RocCurveDisplay.from_predictions(y_test, y_proba)\n",
        "plt.plot([0, 1], [0, 1], c='r', label='No Skill')\n",
        "plt.legend()\n",
        "plt.show()"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
